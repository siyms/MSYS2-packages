diff -Naur rsync-3.2.2-orig/config.guess rsync-3.2.2/config.guess
--- rsync-3.2.2-orig/config.guess	2020-06-17 07:24:23.000000000 +0300
+++ rsync-3.2.2/config.guess	2020-07-20 09:41:26.909909000 +0300
@@ -904,6 +904,9 @@
     amd64:CYGWIN*:*:* | x86_64:CYGWIN*:*:*)
 	echo x86_64-pc-cygwin
 	exit ;;
+    amd64:MSYS*:*:* | x86_64:MSYS*:*:*)
+	echo x86_64-pc-msys
+	exit ;;
     prep*:SunOS:5.*:*)
 	echo powerpcle-unknown-solaris2"`echo "$UNAME_RELEASE"|sed -e 's/[^.]*//'`"
 	exit ;;
diff -Naur rsync-3.2.3-orig/configure.ac rsync-3.2.3/configure.ac
--- rsync-3.2.3-orig/configure.ac	2020-07-31 04:33:58.000000000 +0300
+++ rsync-3.2.3/configure.ac	2020-10-23 22:21:35.691531500 +0300
@@ -353,7 +353,7 @@
 	AS_HELP_STRING([--disable-ipv6],[turn off IPv6 support]))
 if test x"$enable_ipv6" != x"no"; then
 	AC_MSG_CHECKING([ipv6 stack type])
-	for i in inria kame linux-glibc linux-inet6 solaris toshiba v6d zeta cygwin TANDEM; do
+	for i in inria kame linux-glibc linux-inet6 solaris toshiba v6d zeta cygwin msys TANDEM; do
 		case $i in
 		inria)
 			# http://www.kame.net/
@@ -440,7 +440,7 @@
 				ipv6libdir=/usr/local/v6/lib;
 				AC_DEFINE(INET6, 1, [true if you have IPv6])])
 			;;
-		cygwin)
+		cygwin|msys)
 			AC_EGREP_CPP(yes, [
 #include <netinet/in.h>
 #ifdef _CYGWIN_IN6_H
@@ -479,7 +479,7 @@
 
 AC_MSG_CHECKING([whether to call shutdown on all sockets])
 case $host_os in
-	*cygwin* ) AC_MSG_RESULT(yes)
+	*cygwin* | *msys*) AC_MSG_RESULT(yes)
                    AC_DEFINE(SHUTDOWN_ALL_SOCKETS, 1,
 			    [Define to 1 if sockets need to be shutdown])
 		   ;;
@@ -909,7 +909,7 @@
 if test x"$ac_cv_func_posix_fallocate" = x"yes"; then
     AC_MSG_CHECKING([whether posix_fallocate is efficient])
     case $host_os in
-    *cygwin*)
+    *cygwin*|*msys*)
 	AC_MSG_RESULT(yes)
 	AC_DEFINE(HAVE_EFFICIENT_POSIX_FALLOCATE, 1,
 		  [Define if posix_fallocate is efficient (Cygwin)])
@@ -1323,7 +1323,7 @@
     AC_MSG_RESULT(no)
 else
     case "$host_os" in
-    *linux*|*netbsd*|*cygwin*)
+    *linux*|*netbsd*|*cygwin*|*msys*)
 	AC_MSG_RESULT(Using Linux xattrs)
 	AC_DEFINE(HAVE_LINUX_XATTRS, 1, [True if you have Linux xattrs (or equivalent)])
 	AC_DEFINE(SUPPORT_XATTRS, 1)
